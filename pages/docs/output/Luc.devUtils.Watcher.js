Ext.data.JsonP.Luc_devUtils_Watcher({"tagname":"class","name":"Luc.devUtils.Watcher","autodetected":{},"files":[{"filename":"watcher.js","href":"watcher.html#Luc-devUtils-Watcher"}],"members":[{"name":"beforeGet","tagname":"method","owner":"Luc.devUtils.Watcher","id":"method-beforeGet","meta":{"protected":true}},{"name":"beforeSet","tagname":"method","owner":"Luc.devUtils.Watcher","id":"method-beforeSet","meta":{"protected":true}},{"name":"doBreak","tagname":"method","owner":"Luc.devUtils.Watcher","id":"method-doBreak","meta":{"protected":true}},{"name":"doBreakIf","tagname":"method","owner":"Luc.devUtils.Watcher","id":"method-doBreakIf","meta":{"protected":true}},{"name":"pause","tagname":"method","owner":"Luc.devUtils.Watcher","id":"method-pause","meta":{}},{"name":"restore","tagname":"method","owner":"Luc.devUtils.Watcher","id":"method-restore","meta":{}},{"name":"resume","tagname":"method","owner":"Luc.devUtils.Watcher","id":"method-resume","meta":{}},{"name":"pauseAll","tagname":"method","owner":"Luc.devUtils.Watcher","id":"static-method-pauseAll","meta":{"static":true}},{"name":"restoreAll","tagname":"method","owner":"Luc.devUtils.Watcher","id":"static-method-restoreAll","meta":{"static":true}},{"name":"resumeAll","tagname":"method","owner":"Luc.devUtils.Watcher","id":"static-method-resumeAll","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Luc.devUtils.Watcher","short_doc":"Cross browser break on change functionality. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/watcher.html#Luc-devUtils-Watcher' target='_blank'>watcher.js</a></div></pre><div class='doc-contents'><p>Cross browser break on change functionality.  THIS ONLY WORKS ON ES5 BROWSERS (more specifically ones that implement Object.defineProperty).<br/>\nNo errors will be thrown in older browsers.  <br></p>\n\n<p>It also has a few hooks that can be useful for debugging conditional  get/set operations.\nThe default behavior is to invoke the debugger if the value has changed.</p>\n\n<pre><code>var obj = {},\nwatcher = new <a href=\"#!/api/Luc.devUtils.Watcher\" rel=\"Luc.devUtils.Watcher\" class=\"docClass\">Luc.devUtils.Watcher</a>({obj: obj, property: 'str'});\n\nobj.str = 'something';\n//debugger will pop up by default\nwatcher.pause();\nobj.str = 'somethingelse';\n//nothing happens\n\nwatcher.resume();\nobj.str = 'something'\n//debugger pops up again\n\nwatcher.restore();\n//obj watchers are restored obj.str = '' doesn't do anything\n</code></pre>\n\n<p>That is the default behavior of Watcher.  Protected hooks can be overwritten for added functionality.   Check protected in the show dropdown on the right to see all of the hooks.</p>\n\n<pre><code>//just log the value when the obj is accessed\nvar obj = {num: 1},\n    watcher = new <a href=\"#!/api/Luc.devUtils.Watcher\" rel=\"Luc.devUtils.Watcher\" class=\"docClass\">Luc.devUtils.Watcher</a>({\n        obj: obj,\n        property: 'num',\n        doBreak: false,\n        beforeGet: function(val) {\n            console.log(val)\n        }\n    });\n\nobj.num++\n&gt; 1\nobj.num++\n&gt; 2\n</code></pre>\n\n<p><br></p>\n\n<pre><code>//only break when the error property is set to true\nvar obj = {error: false},\n    watcher = new <a href=\"#!/api/Luc.devUtils.Watcher\" rel=\"Luc.devUtils.Watcher\" class=\"docClass\">Luc.devUtils.Watcher</a>({\n        obj: obj,\n        property: 'error',\n        doBreakIf: function(newValue, oldValue) {\n            return newValue === true;\n        }\n    });\n\nobj.error = 'something';\nobj.error = true;\n//debuger shows\n</code></pre>\n\n<p><br></p>\n\n<pre><code>// just log the value being set\nvar obj = {str: ''},\nwatcher = new <a href=\"#!/api/Luc.devUtils.Watcher\" rel=\"Luc.devUtils.Watcher\" class=\"docClass\">Luc.devUtils.Watcher</a>({\n    obj: obj,\n    property: 'str',\n    doBreak: false,\n    beforeSet: function(value) {\n        console.log('setting to ' + value);\n    }\n});\n\nobj.str = 'something';\n&gt;setting to something\nobj.str = 'something else';\n&gt;setting to something else\n</code></pre>\n\n<p>There are also some static convenience methods so you can manage all of your Watcher instances.</p>\n\n<pre><code>//pause all instances\n<a href=\"#!/api/Luc.devUtils.Watcher-static-method-pauseAll\" rel=\"Luc.devUtils.Watcher-static-method-pauseAll\" class=\"docClass\">Luc.devUtils.Watcher.pauseAll</a>();\n\n//resume all instances\n<a href=\"#!/api/Luc.devUtils.Watcher-static-method-resumeAll\" rel=\"Luc.devUtils.Watcher-static-method-resumeAll\" class=\"docClass\">Luc.devUtils.Watcher.resumeAll</a>();\n\n//restore all instances\n<a href=\"#!/api/Luc.devUtils.Watcher-static-method-restoreAll\" rel=\"Luc.devUtils.Watcher-static-method-restoreAll\" class=\"docClass\">Luc.devUtils.Watcher.restoreAll</a>();\n</code></pre>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-beforeGet' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-method-beforeGet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-method-beforeGet' class='name expandable'>beforeGet</a>( <span class='pre'>value, obj</span> )<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Defaults to Luc.emptyFn\n\nFunction that gets called when the obj property is accessed. ...</div><div class='long'><p>Defaults to Luc.emptyFn</p>\n\n<p>Function that gets called when the obj property is accessed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-beforeSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-method-beforeSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-method-beforeSet' class='name expandable'>beforeSet</a>( <span class='pre'>newValue, oldVal, obj</span> )<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Defaults to Luc.emptyFn\nFunction that gets called when the obj property is set. ...</div><div class='long'><p>Defaults to Luc.emptyFn\nFunction that gets called when the obj property is set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>oldVal</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-doBreak' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-method-doBreak' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-method-doBreak' class='name expandable'>doBreak</a>( <span class='pre'>newValue, oldValue, obj</span> )<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Function that is called before the value is set that has the default\ndebugger logic. ...</div><div class='long'><p>Function that is called before the value is set that has the default\ndebugger logic.  Set to false to automatically disable the debugger logic.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>oldValue</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-doBreakIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-method-doBreakIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-method-doBreakIf' class='name expandable'>doBreakIf</a>( <span class='pre'>newValue, oldValue, obj</span> )<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Defaults to return true if the values are not strictly\nequal to each other. ...</div><div class='long'><p>Defaults to return true if the values are not strictly\nequal to each other.  Function to call to determine if a debugger is called.\nReturn true to call the debugger.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>oldValue</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-pause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-method-pause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-method-pause' class='name expandable'>pause</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>By default stop the debugger statement from ever being called. ...</div><div class='long'><p>By default stop the debugger statement from ever being called.</p>\n</div></div></div><div id='method-restore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-method-restore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-method-restore' class='name expandable'>restore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove all hooks on the obj defined by the Watcher. ...</div><div class='long'><p>Remove all hooks on the obj defined by the Watcher.</p>\n</div></div></div><div id='method-resume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-method-resume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-method-resume' class='name expandable'>resume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resume a pause. ...</div><div class='long'><p>Resume a pause.</p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-pauseAll' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-static-method-pauseAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-static-method-pauseAll' class='name expandable'>pauseAll</a>( <span class='pre'></span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>pause all watcher instances ...</div><div class='long'><p>pause all watcher instances</p>\n</div></div></div><div id='static-method-restoreAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-static-method-restoreAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-static-method-restoreAll' class='name expandable'>restoreAll</a>( <span class='pre'></span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>restore all watcher instances ...</div><div class='long'><p>restore all watcher instances</p>\n</div></div></div><div id='static-method-resumeAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.devUtils.Watcher'>Luc.devUtils.Watcher</span><br/><a href='source/watcher.html#Luc-devUtils-Watcher-static-method-resumeAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.devUtils.Watcher-static-method-resumeAll' class='name expandable'>resumeAll</a>( <span class='pre'></span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>resume all watcher instances ...</div><div class='long'><p>resume all watcher instances</p>\n</div></div></div></div></div></div></div>","meta":{}});